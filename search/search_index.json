{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TP : D\u00e9veloppement d'une API REST pour une application de cin\u00e9ma","text":""},{"location":"#contexte","title":"Contexte","text":"<p>Dans le cadre de ce travail pratique, vous allez d\u00e9velopper une API REST pour une application web de cin\u00e9ma. Cette API servira de backend pour une application web permettant aux utilisateurs de consulter les films \u00e0 l'affiche et leurs s\u00e9ances.</p>"},{"location":"#objectif","title":"Objectif","text":"<p>D\u00e9velopper une API REST fonctionnelle qui permettra : - La r\u00e9cup\u00e9ration de la liste des films - La consultation des d\u00e9tails d'un film sp\u00e9cifique - La gestion des s\u00e9ances de cin\u00e9ma</p>"},{"location":"#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>Une base de donn\u00e9es MySQL nomm\u00e9e <code>db_cinematic</code> a \u00e9t\u00e9 pr\u00e9par\u00e9e avec les tables suivantes : - <code>genres</code> : cat\u00e9gories de films - <code>films</code> : informations sur les films - <code>seances</code> : s\u00e9ances de projection des films - <code>utilisateurs</code> et <code>roles</code> : gestion des utilisateurs (non utilis\u00e9s dans ce TP)</p> <p>Le script de cr\u00e9ation de la base de donn\u00e9es (<code>schema.sql</code>) est fourni \u00e0 la racine du projet.</p>"},{"location":"#structure-des-tables-principales","title":"Structure des tables principales","text":"<p>Table <code>genres</code> :</p> <pre><code>CREATE TABLE genres (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nom VARCHAR(50) NOT NULL\n)\n</code></pre> <p>Table <code>films</code> :</p> <pre><code>CREATE TABLE films (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    titre VARCHAR(100) NOT NULL,\n    realisateur VARCHAR(100) NOT NULL,\n    duree TIME NOT NULL,\n    date_sortie DATE NOT NULL,\n    affiche VARCHAR(255) NOT NULL,\n    genre_id INT NOT NULL,\n    description TEXT NOT NULL,\n    FOREIGN KEY (genre_id) REFERENCES genres(id)\n)\n</code></pre> <p>Table <code>seances</code> :</p> <pre><code>CREATE TABLE seances (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    film_id INT NOT NULL,\n    date DATE NOT NULL,\n    heure TIME NOT NULL,\n    places_disponibles INT NOT NULL DEFAULT 100,\n    FOREIGN KEY (film_id) REFERENCES films(id)\n)\n</code></pre>"},{"location":"#api-a-implementer","title":"API \u00e0 impl\u00e9menter","text":"<p>Vous devez impl\u00e9menter une API REST r\u00e9pondant aux endpoints suivants :</p>"},{"location":"#1-liste-des-films","title":"1. Liste des films","text":"<p>Endpoint : <code>GET /api/films</code></p> <p>R\u00e9ponse attendue :</p> <pre><code>{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"titre\": \"Dune\",\n      \"realisateur\": \"Denis Villeneuve\",\n      \"duree\": \"02:35:00\",\n      \"date_sortie\": \"2021-10-22\",\n      \"affiche\": \"https://image.tmdb.org/t/p/w500/8c4a8kE7PizaGQQnditMmI1xbRp.jpg\",\n      \"genre_id\": 2,\n      \"description\": \"...\",\n      \"genre_nom\": \"Science-fiction\"\n    },\n    {...}\n  ]\n}\n</code></pre>"},{"location":"#2-details-dun-film","title":"2. D\u00e9tails d'un film","text":"<p>Endpoint : <code>GET /api/films/:id</code></p> <p>R\u00e9ponse attendue :</p> <pre><code>{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": 1,\n    \"titre\": \"Dune\",\n    \"realisateur\": \"Denis Villeneuve\",\n    \"duree\": \"02:35:00\",\n    \"date_sortie\": \"2021-10-22\",\n    \"affiche\": \"https://image.tmdb.org/t/p/w500/8c4a8kE7PizaGQQnditMmI1xbRp.jpg\",\n    \"genre_id\": 2,\n    \"description\": \"...\",\n    \"genre_nom\": \"Science-fiction\"\n  }\n}\n</code></pre>"},{"location":"#3-liste-des-seances-dun-film","title":"3. Liste des s\u00e9ances d'un film","text":"<p>Endpoint : <code>GET /api/films/:id/seances</code></p> <p>R\u00e9ponse attendue :</p> <pre><code>{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"film_id\": 1,\n      \"date\": \"2025-02-10\",\n      \"heure\": \"18:00:00\",\n      \"places_disponibles\": 100\n    },\n    {...}\n  ]\n}\n</code></pre>"},{"location":"#application-de-test","title":"Application de test","text":"<p>Deux applications de test sont fournies pour vous permettre de tester votre API :</p>"},{"location":"#1-application-de-test-php","title":"1. Application de test PHP","text":"<p>Une application de test PHP (<code>api-rest-test</code>) est fournie pour vous permettre de tester votre API. Cette application est une interface web simple qui utilise la fonction <code>file_get_contents()</code> pour effectuer des requ\u00eates HTTP vers votre API REST.</p> <p>L'application affiche la liste des films et permet de consulter les d\u00e9tails d'un film en communiquant directement avec votre API.</p> <p>Pour utiliser cette application :    1. D\u00e9marrez votre serveur API sur le port 8000   1. Ouvrez les fichiers <code>index.php</code> et <code>details.php</code> dans un serveur web (Apache, XAMPP, etc.)     2. Vous devriez voir s'afficher la liste des films et pouvoir consulter leurs d\u00e9tails      </p>"},{"location":"#2-application-de-test-javascript","title":"2. Application de test JavaScript","text":"<p>Une seconde application de test (<code>api-rest-test-javascript</code>) utilisant JavaScript pour faire des appels AJAX vers votre API est \u00e9galement disponible. Cette application vous permettra de tester la gestion des requ\u00eates CORS par votre API.</p> <p>Pour utiliser cette application :   1. D\u00e9marrez votre serveur API sur le port 8000    2. Ouvrez le fichier <code>index.html</code> directement dans un navigateur     3. L'application effectuera des requ\u00eates vers votre API et affichera les r\u00e9sultats      </p> <p>Note importante : Pour que l'application JavaScript fonctionne correctement, votre API doit \u00eatre configur\u00e9e pour g\u00e9rer les requ\u00eates CORS en incluant les en-t\u00eates appropri\u00e9s tels que <code>Access-Control-Allow-Origin</code>, <code>Access-Control-Allow-Methods</code>, et <code>Access-Control-Allow-Headers</code>.</p>"},{"location":"#technologies-a-utiliser","title":"Technologies \u00e0 utiliser","text":"<p>Vous \u00eates libre de choisir la technologie que vous souhaitez pour d\u00e9velopper cette API. </p> <ul> <li>Express.js (Node.js) - https://expressjs.com/fr/</li> <li>Fastify (Node.js) - https://fastify.dev/</li> <li>Koa.js (Node.js) - https://koajs.com/</li> <li>Hono (Node.js/Deno/Bun) - https://hono.dev/</li> <li>Nitro (Node.js) - https://nitro.unjs.io/</li> <li>Python avec Flask - https://flask.palletsprojects.com/ </li> <li>PHP avec FlightPHP - https://flightphp.com/</li> </ul>"},{"location":"#consignes","title":"Consignes","text":"<ol> <li>Cr\u00e9ez un nouveau dossier pour votre projet</li> <li>Mettez en place l'environnement de d\u00e9veloppement avec la technologie de votre choix</li> <li>Impl\u00e9mentez la connexion \u00e0 la base de donn\u00e9es</li> <li>D\u00e9veloppez les endpoints requis</li> <li>Testez votre API avec l'application de test fournie</li> <li>Documentez votre code et votre API</li> </ol>"},{"location":"#implementations-disponibles","title":"Impl\u00e9mentations disponibles","text":"<p>Des exemples d'impl\u00e9mentation sont disponibles dans les dossiers suivants :</p> <ul> <li><code>api-rest-express</code> : Impl\u00e9mentation avec Express.js</li> <li><code>api-rest-fastify</code> : Impl\u00e9mentation avec Fastify</li> <li><code>api-rest-koa</code> : Impl\u00e9mentation avec Koa.js</li> <li><code>api-rest-hono</code> : Impl\u00e9mentation avec Hono</li> <li><code>api-rest-nitro</code> : Impl\u00e9mentation avec Nitro</li> <li><code>api-rest-python</code> : Impl\u00e9mentation avec Flask</li> <li><code>api-rest-flight</code> : Impl\u00e9mentation avec FlightPHP</li> </ul> <p>Chaque dossier contient :        </p> <ul> <li>Le code source complet de l'API         </li> <li>Un fichier README.md avec les instructions d'installation et d'utilisation    </li> <li>Les d\u00e9pendances n\u00e9cessaires    </li> </ul> <p>Pour utiliser une impl\u00e9mentation :     </p> <ol> <li>Choisissez le dossier correspondant \u00e0 la technologie souhait\u00e9e    </li> <li>Suivez les instructions du README.md pour l'installation et le d\u00e9marrage    </li> <li>Testez l'API avec l'application de test fournie    </li> </ol>"},{"location":"#criteres-devaluation","title":"Crit\u00e8res d'\u00e9valuation","text":"<ul> <li>Fonctionnalit\u00e9 : l'API r\u00e9pond correctement aux endpoints d\u00e9finis   </li> <li>Structure du code : organisation, lisibilit\u00e9, modularit\u00e9    </li> <li>Gestion des erreurs : retours d'erreurs appropri\u00e9s    </li> <li>Documentation : clart\u00e9 des commentaires et de la documentation de l'API    </li> <li>Respect des principes REST    </li> </ul>"},{"location":"#livrable","title":"Livrable","text":"<p>Un d\u00e9p\u00f4t Git contenant :   </p> <ul> <li>Le code source de votre API    </li> <li>Un fichier README.md expliquant comment installer et d\u00e9marrer votre API   </li> <li>Le script de cr\u00e9ation de la base de donn\u00e9es utilis\u00e9e    </li> </ul> <p>Bon d\u00e9veloppement ! </p>"},{"location":"cors/","title":"CORS (Cross-Origin Resource Sharing)","text":""},{"location":"cors/#quest-ce-que-cors","title":"Qu'est-ce que CORS ?","text":"<p>CORS (Cross-Origin Resource Sharing) est un m\u00e9canisme de s\u00e9curit\u00e9 impl\u00e9ment\u00e9 par les navigateurs web. Il permet \u00e0 un serveur d'indiquer quels autres domaines (origines) sont autoris\u00e9s \u00e0 acc\u00e9der \u00e0 ses ressources. Cette technologie est essentielle dans le d\u00e9veloppement d'applications web modernes, en particulier pour les API REST.</p>"},{"location":"cors/#a-quoi-sert-cors","title":"\u00c0 quoi sert CORS ?","text":""},{"location":"cors/#le-probleme-de-la-same-origin-policy","title":"Le probl\u00e8me de la \"Same-Origin Policy\"","text":"<p>Par d\u00e9faut, les navigateurs web appliquent une politique de s\u00e9curit\u00e9 appel\u00e9e \"Same-Origin Policy\" (Politique de m\u00eame origine). Cette politique emp\u00eache une page web d'effectuer des requ\u00eates AJAX/fetch vers un domaine diff\u00e9rent de celui qui a servi la page.</p> <p>Par exemple : - Si votre site web est h\u00e9berg\u00e9 sur <code>https://monsite.com</code> - Et que votre API est h\u00e9berg\u00e9e sur <code>https://api.monsite.com</code> - Le navigateur bloquera par d\u00e9faut les requ\u00eates de votre site vers votre API</p> <p>CORS a \u00e9t\u00e9 cr\u00e9\u00e9 pour r\u00e9soudre ce probl\u00e8me en permettant au serveur de sp\u00e9cifier explicitement quels domaines peuvent acc\u00e9der \u00e0 ses ressources.</p>"},{"location":"cors/#les-avantages-de-cors","title":"Les avantages de CORS","text":"<ul> <li>Permet le d\u00e9veloppement d'applications d\u00e9centralis\u00e9es (frontend et backend s\u00e9par\u00e9s)</li> <li>Offre une couche de s\u00e9curit\u00e9 contr\u00f4l\u00e9e</li> <li>Facilite l'utilisation d'API tierces</li> <li>Permet de partager des ressources entre diff\u00e9rents domaines de mani\u00e8re s\u00e9curis\u00e9e</li> </ul>"},{"location":"cors/#comment-fonctionne-cors","title":"Comment fonctionne CORS ?","text":""},{"location":"cors/#le-mecanisme-principal","title":"Le m\u00e9canisme principal","text":"<ol> <li>Requ\u00eate du client : Lorsqu'une requ\u00eate est effectu\u00e9e vers un autre domaine (origine), g\u00e9n\u00e9ralement via JavaScript (fetch, XMLHttpRequest, axios), mais aussi par d'autres technologies web comme WebAssembly, applets Java ou plugins de navigateur</li> <li>En-t\u00eates sp\u00e9ciaux : Le navigateur ajoute automatiquement des en-t\u00eates CORS \u00e0 la requ\u00eate</li> <li>V\u00e9rification par le serveur : Le serveur examine ces en-t\u00eates et d\u00e9cide s'il autorise la requ\u00eate</li> <li>R\u00e9ponse avec en-t\u00eates CORS : Le serveur r\u00e9pond avec des en-t\u00eates CORS sp\u00e9cifiant ce qui est autoris\u00e9</li> <li>D\u00e9cision du navigateur : Le navigateur analyse ces en-t\u00eates et permet ou bloque la r\u00e9ponse</li> </ol>"},{"location":"cors/#important-cors-ne-sapplique-quaux-requetes-initiees-par-le-navigateur","title":"Important : CORS ne s'applique qu'aux requ\u00eates initi\u00e9es par le navigateur","text":"<p>Il est crucial de comprendre que CORS est une restriction impos\u00e9e par les navigateurs web uniquement. Les requ\u00eates serveur-\u00e0-serveur ne sont pas concern\u00e9es par CORS :</p> <ul> <li>Les requ\u00eates effectu\u00e9es c\u00f4t\u00e9 serveur (PHP avec <code>curl</code>, <code>file_get_contents</code>, Guzzle, Python avec <code>requests</code>, Node.js avec <code>axios</code> c\u00f4t\u00e9 serveur, etc.) ne sont pas soumises aux restrictions CORS</li> <li>Vous pouvez appeler n'importe quelle API depuis votre code backend sans vous soucier de CORS</li> <li>CORS est uniquement une pr\u00e9occupation pour le code ex\u00e9cut\u00e9 dans le navigateur de l'utilisateur</li> </ul> <p>Par exemple, si votre application PHP doit consommer une API externe :</p> <pre><code>// Cette requ\u00eate PHP vers une API externe ignore compl\u00e8tement CORS\n$response = file_get_contents('https://api.externe.com/data');\n// ou avec cURL\n$ch = curl_init('https://api.externe.com/data');\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$response = curl_exec($ch);\n</code></pre>"},{"location":"cors/#les-requetes-preliminaires-preflight","title":"Les requ\u00eates pr\u00e9liminaires (Preflight)","text":"<p>Pour les requ\u00eates complexes (PUT, DELETE, avec en-t\u00eates personnalis\u00e9s, etc.), le navigateur envoie d'abord une requ\u00eate \"preflight\" avec la m\u00e9thode HTTP OPTIONS pour demander au serveur quelles options sont autoris\u00e9es avant d'envoyer la requ\u00eate r\u00e9elle.</p>"},{"location":"cors/#principaux-en-tetes-cors","title":"Principaux en-t\u00eates CORS","text":"<ul> <li><code>Access-Control-Allow-Origin</code> : Sp\u00e9cifie quels domaines peuvent acc\u00e9der aux ressources</li> <li><code>Access-Control-Allow-Methods</code> : Indique les m\u00e9thodes HTTP autoris\u00e9es (GET, POST, PUT, DELETE, etc.)</li> <li><code>Access-Control-Allow-Headers</code> : D\u00e9finit quels en-t\u00eates HTTP peuvent \u00eatre utilis\u00e9s</li> <li><code>Access-Control-Allow-Credentials</code> : Indique si la requ\u00eate peut inclure des cookies</li> </ul>"},{"location":"cors/#comment-mettre-en-uvre-cors-dans-votre-api","title":"Comment mettre en \u0153uvre CORS dans votre API","text":""},{"location":"cors/#avec-nodejs-et-express","title":"Avec Node.js et Express","text":"<pre><code>const express = require('express');\nconst cors = require('cors');\nconst app = express();\n\n// Utilisation simple avec configuration par d\u00e9faut\napp.use(cors());\n\n// OU avec une configuration personnalis\u00e9e\napp.use(cors({\n  origin: 'https://monsite.com',  // Domaine autoris\u00e9\n  methods: ['GET', 'POST'],       // M\u00e9thodes autoris\u00e9es\n  allowedHeaders: ['Content-Type', 'Authorization']  // En-t\u00eates autoris\u00e9s\n}));\n</code></pre>"},{"location":"cors/#avec-nodejs-et-fastify","title":"Avec Node.js et Fastify","text":"<pre><code>const fastify = require('fastify')({ logger: true });\nconst cors = require('@fastify/cors');\n\n// Configuration simple\nfastify.register(cors, {\n  origin: true  // Autorise toutes les origines\n});\n\n// OU avec une configuration personnalis\u00e9e\nfastify.register(cors, {\n  origin: ['https://monsite.com', 'https://autre-site.com'],\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  credentials: true\n});\n</code></pre>"},{"location":"cors/#avec-hono-nodejsdenobun","title":"Avec Hono (Node.js/Deno/Bun)","text":"<pre><code>import { Hono } from 'hono';\nconst app = new Hono();\n\n// Middleware CORS personnalis\u00e9\napp.use('*', async (c, next) =&gt; {\n  c.header('Access-Control-Allow-Origin', '*');\n  c.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  c.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n  if (c.req.method === 'OPTIONS') {\n    return c.text('', 204);\n  }\n\n  await next();\n});\n</code></pre>"},{"location":"cors/#avec-php-comme-dans-flight-php","title":"Avec PHP (comme dans Flight PHP)","text":"<pre><code>// Configuration CORS\nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: GET, POST, OPTIONS');\nheader('Access-Control-Allow-Headers: Content-Type, Authorization');\nheader('Content-Type: application/json');\n\n// Gestion des requ\u00eates OPTIONS (preflight)\nif ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {\n  header('HTTP/1.1 200 OK');\n  exit();\n}\n</code></pre>"},{"location":"cors/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ol> <li>Ne pas utiliser <code>*</code> en production : En production, sp\u00e9cifiez pr\u00e9cis\u00e9ment les domaines autoris\u00e9s plut\u00f4t que d'utiliser <code>*</code> (toutes les origines)</li> <li>Limiter les m\u00e9thodes HTTP : N'autorisez que les m\u00e9thodes dont votre API a besoin</li> <li>Restreindre les en-t\u00eates : Limitez les en-t\u00eates autoris\u00e9s \u00e0 ceux n\u00e9cessaires pour votre application</li> </ol>"},{"location":"cors/#conclusion","title":"Conclusion","text":"<p>CORS est un m\u00e9canisme essentiel pour le d\u00e9veloppement d'API REST et d'applications web modernes. Il permet de contourner les restrictions de la politique de m\u00eame origine tout en maintenant un niveau de s\u00e9curit\u00e9 appropri\u00e9. En configurant correctement CORS dans votre API, vous permettez \u00e0 votre frontend d'interagir avec votre backend m\u00eame s'ils sont h\u00e9berg\u00e9s sur des domaines diff\u00e9rents.</p> <p>En comprenant ce m\u00e9canisme, vous serez en mesure de d\u00e9boguer efficacement les probl\u00e8mes li\u00e9s \u00e0 CORS et de configurer correctement votre API pour qu'elle soit accessible depuis vos applications client. </p>"},{"location":"json/","title":"Le langage JSON","text":""},{"location":"json/#1-definition-de-json","title":"1. D\u00e9finition de JSON","text":"<p>JSON (JavaScript Object Notation) est un format l\u00e9ger d'\u00e9change de donn\u00e9es. C'est un format texte, facile \u00e0 lire pour les humains et facile \u00e0 analyser/g\u00e9n\u00e9rer pour les machines. JSON est un format ind\u00e9pendant de tout langage de programmation, ce qui en fait un choix id\u00e9al pour l'\u00e9change de donn\u00e9es entre applications.</p>"},{"location":"json/#2-utilite-et-utilisation-de-json","title":"2. Utilit\u00e9 et utilisation de JSON","text":""},{"location":"json/#pourquoi-utiliser-json","title":"Pourquoi utiliser JSON ?","text":"<ul> <li>L\u00e9ger : Format compact qui consomme peu de bande passante</li> <li>Lisible : Facile \u00e0 comprendre pour les d\u00e9veloppeurs</li> <li>Universel : Compatible avec la plupart des langages de programmation</li> <li>Standardis\u00e9 : Format bien d\u00e9fini avec une syntaxe pr\u00e9cise</li> </ul>"},{"location":"json/#cas-dutilisation-courants","title":"Cas d'utilisation courants","text":"<ul> <li>APIs REST : La plupart des API Web modernes utilisent JSON pour \u00e9changer des donn\u00e9es</li> <li>Configuration : Stockage de param\u00e8tres d'applications</li> <li>Stockage de donn\u00e9es : Certaines bases de donn\u00e9es NoSQL comme MongoDB utilisent un format proche de JSON</li> <li>Communication client-serveur : \u00c9change de donn\u00e9es entre navigateur et serveur web</li> </ul>"},{"location":"json/#3-difference-entre-json-et-un-objet-javascript","title":"3. Diff\u00e9rence entre JSON et un objet JavaScript","text":"<p>Bien que la syntaxe soit similaire, il existe des diff\u00e9rences importantes :</p> JSON Objet JavaScript Format de donn\u00e9es textuel Structure de donn\u00e9es en m\u00e9moire Doit utiliser des guillemets doubles pour les noms de propri\u00e9t\u00e9s Accepte les propri\u00e9t\u00e9s sans guillemets Ne peut pas contenir de fonctions Peut contenir des m\u00e9thodes (fonctions) Ne supporte pas les commentaires Supporte les commentaires Valeurs limit\u00e9es (string, number, object, array, boolean, null) Accepte tous types de valeurs JavaScript (y compris undefined, Date, etc.)"},{"location":"json/#4-syntaxe-du-langage-json","title":"4. Syntaxe du langage JSON","text":""},{"location":"json/#structure-de-base","title":"Structure de base","text":"<p>Un document JSON est construit selon deux structures : - Une collection de paires nom/valeur (objet) - Une liste ordonn\u00e9e de valeurs (tableau)</p>"},{"location":"json/#types-de-donnees-supportes","title":"Types de donn\u00e9es support\u00e9s","text":"<ul> <li>Cha\u00eenes de caract\u00e8res : Texte entre guillemets doubles <code>\"exemple\"</code></li> <li>Nombres : Entiers ou d\u00e9cimaux, positifs ou n\u00e9gatifs <code>42</code>, <code>3.14</code>, <code>-7</code></li> <li>Bool\u00e9ens : <code>true</code> ou <code>false</code></li> <li>Null : <code>null</code></li> <li>Tableaux : Collection ordonn\u00e9e de valeurs <code>[1, 2, 3]</code></li> <li>Objets : Collection de paires nom/valeur <code>{\"nom\": \"valeur\"}</code></li> </ul>"},{"location":"json/#exemples","title":"Exemples","text":""},{"location":"json/#objet-json-simple","title":"Objet JSON simple","text":"<pre><code>{\n  \"nom\": \"Dupont\",\n  \"prenom\": \"Jean\",\n  \"age\": 25,\n  \"etudiant\": true\n}\n</code></pre>"},{"location":"json/#tableau-json","title":"Tableau JSON","text":"<pre><code>[\n  \"Paris\",\n  \"Lyon\",\n  \"Marseille\",\n  \"Toulouse\"\n]\n</code></pre>"},{"location":"json/#structure-complexe","title":"Structure complexe","text":"<pre><code>{\n  \"etudiant\": {\n    \"nom\": \"Dupont\",\n    \"prenom\": \"Jean\",\n    \"notes\": [12, 14, 16],\n    \"adresse\": {\n      \"rue\": \"1 rue de la Paix\",\n      \"ville\": \"Paris\",\n      \"codePostal\": \"75001\"\n    },\n    \"actif\": true\n  }\n}\n</code></pre>"},{"location":"json/#tableaux-dobjets","title":"Tableaux d'objets","text":"<p>Les tableaux d'objets sont tr\u00e8s fr\u00e9quents en JSON et particuli\u00e8rement utiles pour repr\u00e9senter des collections d'\u00e9l\u00e9ments similaires.</p>"},{"location":"json/#a-representation-avec-objet-parent","title":"a) Repr\u00e9sentation avec objet parent","text":"<p>Cette approche encapsule le tableau d'objets dans un objet parent, permettant d'ajouter des m\u00e9tadonn\u00e9es.</p> <pre><code>{\n  \"etudiants\": [\n    {\n      \"nom\": \"Dupont\",\n      \"prenom\": \"Jean\",\n      \"age\": 21,\n      \"notes\": [12, 15, 14]\n    },\n    {\n      \"nom\": \"Martin\",\n      \"prenom\": \"Sophie\",\n      \"age\": 22,\n      \"notes\": [16, 18, 17]\n    },\n    {\n      \"nom\": \"Durand\",\n      \"prenom\": \"Thomas\",\n      \"age\": 20,\n      \"notes\": [10, 13, 11]\n    }\n  ],\n  \"promotion\": \"BTS SIO 2024\"\n}\n</code></pre> <p>Avantages : - Possibilit\u00e9 d'ajouter des m\u00e9tadonn\u00e9es au m\u00eame niveau (comme \"promotion\") - Structure adapt\u00e9e pour des r\u00e9ponses d'API compl\u00e8tes - Possibilit\u00e9 d'\u00e9tendre facilement avec d'autres propri\u00e9t\u00e9s</p> <p>En JavaScript, l'acc\u00e8s se fait via l'objet parent :</p> <pre><code>const data = JSON.parse(jsonString);\nconst etudiants = data.etudiants;\n\netudiants.forEach(etudiant =&gt; {\n  console.log(`${etudiant.prenom} ${etudiant.nom} - Moyenne: ${\n    etudiant.notes.reduce((sum, note) =&gt; sum + note, 0) / etudiant.notes.length\n  }`);\n});\n</code></pre>"},{"location":"json/#b-representation-directe-avec-tableau","title":"b) Repr\u00e9sentation directe avec tableau","text":"<p>Cette seconde approche, plus directe, consiste \u00e0 commencer imm\u00e9diatement par un tableau d'objets.</p> <pre><code>[\n  {\n    \"nom\": \"Dupont\",\n    \"prenom\": \"Jean\",\n    \"age\": 21,\n    \"notes\": [12, 15, 14]\n  },\n  {\n    \"nom\": \"Martin\",\n    \"prenom\": \"Sophie\",\n    \"age\": 22,\n    \"notes\": [16, 18, 17]\n  },\n  {\n    \"nom\": \"Durand\",\n    \"prenom\": \"Thomas\",\n    \"age\": 20,\n    \"notes\": [10, 13, 11]\n  }\n]\n</code></pre> <p>Avantages : - Structure plus concise - Format privil\u00e9gi\u00e9 pour les listes de ressources - Facilite l'int\u00e9gration avec des tableaux HTML ou des composants de liste en frontend</p> <p>En JavaScript, le parsing donne directement acc\u00e8s au tableau :</p> <pre><code>const etudiants = JSON.parse(jsonString);\n\n// Comme etudiants est d\u00e9j\u00e0 un tableau, on peut le parcourir directement\netudiants.forEach(etudiant =&gt; {\n  console.log(`${etudiant.prenom} ${etudiant.nom}`);\n});\n\n// Filtrer les \u00e9tudiants ayant une certaine moyenne\nconst etudiantsReussite = etudiants.filter(etudiant =&gt; {\n  const moyenne = etudiant.notes.reduce((sum, note) =&gt; sum + note, 0) / etudiant.notes.length;\n  return moyenne &gt;= 12;\n});\n</code></pre> <p>Cette approche est couramment utilis\u00e9e dans les API REST pour retourner des collections d'\u00e9l\u00e9ments lorsqu'aucune m\u00e9tadonn\u00e9e n'est n\u00e9cessaire.</p>"},{"location":"json/#regles-importantes","title":"R\u00e8gles importantes","text":"<ul> <li>Les noms de propri\u00e9t\u00e9s DOIVENT \u00eatre entre guillemets doubles</li> <li>Les cha\u00eenes de caract\u00e8res DOIVENT \u00eatre entre guillemets doubles</li> <li>Pas de virgule apr\u00e8s le dernier \u00e9l\u00e9ment d'un objet ou d'un tableau</li> <li>Pas de commentaires autoris\u00e9s</li> </ul>"},{"location":"json/#5-utilisation-de-json","title":"5. Utilisation de JSON","text":""},{"location":"json/#en-javascript","title":"En JavaScript","text":""},{"location":"json/#convertir-json-en-objet-javascript-parsing","title":"Convertir JSON en objet JavaScript (parsing)","text":"<pre><code>// Cha\u00eene JSON\nconst jsonString = '{\"nom\": \"Dupont\", \"prenom\": \"Jean\", \"age\": 25}';\n\n// Conversion JSON \u2192 Objet JavaScript\nconst personne = JSON.parse(jsonString);\n\n// Utilisation de l'objet\nconsole.log(personne.nom); // Affiche: Dupont\nconsole.log(personne.age); // Affiche: 25\n</code></pre>"},{"location":"json/#convertir-un-objet-javascript-en-json-stringification","title":"Convertir un objet JavaScript en JSON (stringification)","text":"<pre><code>// Objet JavaScript\nconst etudiant = {\n  nom: \"Martin\",\n  prenom: \"Sophie\",\n  age: 22,\n  notes: [15, 16, 14]\n};\n\n// Conversion Objet JavaScript \u2192 JSON\nconst jsonEtudiant = JSON.stringify(etudiant);\n\n// Affichage format\u00e9\nconst jsonFormate = JSON.stringify(etudiant, null, 2);\nconsole.log(jsonFormate);\n</code></pre>"},{"location":"json/#en-php","title":"En PHP","text":""},{"location":"json/#convertir-json-en-tableauobjet-php-decodage","title":"Convertir JSON en tableau/objet PHP (d\u00e9codage)","text":"<pre><code>&lt;?php\n// Cha\u00eene JSON\n$jsonString = '{\"nom\": \"Dupont\", \"prenom\": \"Jean\", \"age\": 25}';\n\n// Conversion JSON \u2192 tableau associatif PHP\n$personne = json_decode($jsonString, true);\necho $personne['nom']; // Affiche: Dupont\n\n// Conversion JSON \u2192 objet PHP\n$personneObj = json_decode($jsonString);\necho $personneObj-&gt;nom; // Affiche: Dupont\n?&gt;\n</code></pre>"},{"location":"json/#convertir-un-tableauobjet-php-en-json-encodage","title":"Convertir un tableau/objet PHP en JSON (encodage)","text":"<pre><code>&lt;?php\n// Tableau associatif PHP\n$etudiant = [\n  \"nom\" =&gt; \"Martin\",\n  \"prenom\" =&gt; \"Sophie\",\n  \"age\" =&gt; 22,\n  \"notes\" =&gt; [15, 16, 14]\n];\n\n// Conversion tableau PHP \u2192 JSON\n$jsonEtudiant = json_encode($etudiant);\necho $jsonEtudiant;\n\n// Avec mise en forme (PHP 5.4+)\n$jsonFormate = json_encode($etudiant, JSON_PRETTY_PRINT);\necho $jsonFormate;\n?&gt;\n</code></pre>"},{"location":"json/#6-bonnes-pratiques","title":"6. Bonnes pratiques","text":"<ul> <li>Utilisez des noms de propri\u00e9t\u00e9s explicites et coh\u00e9rents</li> <li>Structurez vos donn\u00e9es logiquement (hi\u00e9rarchie claire)</li> <li>Pensez \u00e0 la validation des donn\u00e9es JSON (sch\u00e9mas JSON)</li> <li>G\u00e9rez correctement les erreurs lors du parsing</li> <li>\u00c9vitez les structures trop profondes ou trop complexes</li> </ul>"},{"location":"json/#7-outils-utiles","title":"7. Outils utiles","text":"<ul> <li>Validateurs JSON : JSONLint</li> <li>Formateurs : JSON Formatter &amp; Validator</li> <li>Extensions pour navigateurs : JSONView pour Firefox/Chrome</li> <li>\u00c9diteurs de code : la plupart poss\u00e8dent une coloration syntaxique pour JSON</li> </ul>"},{"location":"json/#8-conclusion","title":"8. Conclusion","text":"<p>JSON est devenu le standard de facto pour l'\u00e9change de donn\u00e9es dans les applications web modernes. Sa simplicit\u00e9, sa l\u00e9g\u00e8ret\u00e9 et sa compatibilit\u00e9 universelle en font un outil essentiel \u00e0 ma\u00eetriser pour tout d\u00e9veloppeur.</p> <p>La connaissance de JSON est particuli\u00e8rement importante pour les d\u00e9veloppeurs travaillant sur des architectures orient\u00e9es services, des API REST, ou des applications web modernes utilisant des frameworks JavaScript. </p>"},{"location":"markdown/","title":"Introduction au langage Markdown","text":""},{"location":"markdown/#1-quest-ce-que-markdown","title":"1. Qu'est-ce que Markdown ?","text":"<p>Markdown est un langage de balisage l\u00e9ger con\u00e7u pour formater du texte de mani\u00e8re simple et intuitive. Il permet de structurer et styliser du texte en utilisant une syntaxe facile \u00e0 lire et \u00e0 \u00e9crire. Son principal avantage est qu'il peut \u00eatre converti en HTML sans n\u00e9cessiter de connaissances avanc\u00e9es en d\u00e9veloppement web.</p>"},{"location":"markdown/#11-role-de-markdown","title":"1.1 R\u00f4le de Markdown","text":"<p>Markdown est couramment utilis\u00e9 pour : - La documentation technique (ex. : GitHub, GitLab, etc.). - La r\u00e9daction d'articles et de blogs. - La r\u00e9daction de fichiers README. - La mise en forme des notes et contenus \u00e9ducatifs.</p>"},{"location":"markdown/#12-fonctionnement-de-markdown","title":"1.2 Fonctionnement de Markdown","text":"<p>Le texte \u00e9crit en Markdown peut \u00eatre lu directement sans mise en forme, mais il peut aussi \u00eatre converti automatiquement en HTML ou affich\u00e9 avec un style particulier dans des outils compatibles comme VS Code, GitHub, ou des g\u00e9n\u00e9rateurs de site statique.</p>"},{"location":"markdown/#2-syntaxe-de-base-de-markdown","title":"2. Syntaxe de base de Markdown","text":""},{"location":"markdown/#21-titres","title":"2.1 Titres","text":"<p>Les titres sont d\u00e9finis en utilisant des <code>#</code>. Plus le nombre de <code>#</code> est grand, plus le titre est petit.</p> <pre><code># Titre de niveau 1\n## Titre de niveau 2\n### Titre de niveau 3\n#### Titre de niveau 4\n</code></pre>"},{"location":"markdown/#22-mise-en-forme-du-texte","title":"2.2 Mise en forme du texte","text":"<p>Markdown permet de mettre en forme le texte facilement.</p> <ul> <li>Gras : <code>**Texte en gras**</code> \u2192 Texte en gras</li> <li>Italique : <code>*Texte en italique*</code> \u2192 Texte en italique</li> <li>~~Barr\u00e9~~ : <code>~~Texte barr\u00e9~~</code> \u2192 ~~Texte barr\u00e9~~</li> </ul>"},{"location":"markdown/#23-listes","title":"2.3 Listes","text":"<p>Listes non ordonn\u00e9es :</p> <pre><code>- \u00c9l\u00e9ment 1\n- \u00c9l\u00e9ment 2\n  - Sous-\u00e9l\u00e9ment 2.1\n  - Sous-\u00e9l\u00e9ment 2.2\n</code></pre> <p>Affichage : - \u00c9l\u00e9ment 1 - \u00c9l\u00e9ment 2   - Sous-\u00e9l\u00e9ment 2.1   - Sous-\u00e9l\u00e9ment 2.2</p> <p>Listes ordonn\u00e9es :</p> <pre><code>1. Premier \u00e9l\u00e9ment\n2. Deuxi\u00e8me \u00e9l\u00e9ment\n3. Troisi\u00e8me \u00e9l\u00e9ment\n</code></pre> <p>Affichage : 1. Premier \u00e9l\u00e9ment 2. Deuxi\u00e8me \u00e9l\u00e9ment 3. Troisi\u00e8me \u00e9l\u00e9ment</p>"},{"location":"markdown/#24-liens-et-images","title":"2.4 Liens et images","text":"<p>Liens :</p> <pre><code>[Nom du lien](https://exemple.com)\n</code></pre> <p>Affichage : Nom du lien</p> <p>Images :</p> <pre><code>![Texte alternatif](https://exemple.com/image.jpg)\n</code></pre>"},{"location":"markdown/#25-blocs-de-code","title":"2.5 Blocs de code","text":"<p>Markdown permet d'afficher du code en utilisant des accents graves <code>```</code>.</p> <pre><code>```php\n&lt;?php\necho \"Bonjour, Markdown !\";\n</code></pre> <pre><code>\nAffichage :\n\n```php\n&lt;?php\necho \"Bonjour, Markdown !\";\n</code></pre>"},{"location":"markdown/#26-citations","title":"2.6 Citations","text":"<p>Les citations se cr\u00e9ent avec le <code>&gt;</code>.</p> <pre><code>&gt; Ceci est une citation en Markdown.\n</code></pre> <p>Affichage :</p> <p>Ceci est une citation en Markdown.</p>"},{"location":"markdown/#27-tableaux","title":"2.7 Tableaux","text":"<p>Markdown permet de cr\u00e9er des tableaux simplement.</p> <pre><code>| Nom     | \u00c2ge | M\u00e9tier      |\n|---------|----|------------|\n| Alice   | 25 | D\u00e9veloppeuse |\n| Bob     | 30 | Designer    |\n</code></pre> <p>Affichage :</p> Nom \u00c2ge M\u00e9tier Alice 25 D\u00e9veloppeuse Bob 30 Designer"},{"location":"markdown/#3-syntaxe-avancee","title":"3. Syntaxe avanc\u00e9e","text":"<p>Markdown offre des fonctionnalit\u00e9s avanc\u00e9es permettant d'am\u00e9liorer la mise en forme et la structuration des documents.</p>"},{"location":"markdown/#31-liens-avec-titres","title":"3.1 Liens avec titres","text":"<p>Il est possible d'ajouter un titre sur un lien qui s'affichera au survol :</p> <pre><code>[Nom du lien](https://exemple.com \"Titre du lien\")\n</code></pre> <p>Affichage : Nom du lien</p>"},{"location":"markdown/#32-images-avec-dimensions","title":"3.2 Images avec dimensions","text":"<p>On peut redimensionner une image en combinant du HTML :</p> <pre><code>&lt;img src=\"https://exemple.com/image.jpg\" alt=\"Texte alternatif\" width=\"300\" height=\"200\"&gt;\n</code></pre>"},{"location":"markdown/#33-liens-internes","title":"3.3 Liens internes","text":"<p>Pour r\u00e9f\u00e9rencer une section interne du document, il suffit d'utiliser :</p> <pre><code>[Aller \u00e0 la section 2](#2-syntaxe-de-base-de-markdown)\n</code></pre>"},{"location":"markdown/#34-blocs-de-code-specifiques","title":"3.4 Blocs de code sp\u00e9cifiques","text":"<p>Il est possible d\u2019indiquer le langage de programmation pour un meilleur rendu syntaxique :</p> <pre><code>```javascript\nconsole.log(\"Bonjour, Markdown !\");\n</code></pre> <pre><code>\nAffichage :\n\n```javascript\nconsole.log(\"Bonjour, Markdown !\");\n</code></pre>"},{"location":"markdown/#35-cases-a-cocher-checklist","title":"3.5 Cases \u00e0 cocher (Checklist)","text":"<p>Markdown permet de cr\u00e9er des listes avec des cases \u00e0 cocher (pratique pour les TODOs) :</p> <pre><code>- [x] T\u00e2che termin\u00e9e\n- [ ] T\u00e2che en cours\n- [ ] T\u00e2che \u00e0 faire\n</code></pre> <p>Affichage : - [x] T\u00e2che termin\u00e9e - [ ] T\u00e2che en cours - [ ] T\u00e2che \u00e0 faire</p>"},{"location":"markdown/#36-notes-de-bas-de-page","title":"3.6 Notes de bas de page","text":"<p>Markdown prend en charge les notes de bas de page :</p> <pre><code>Ceci est un texte avec une note[^1].\n\n[^1]: Ceci est la note de bas de page.\n</code></pre> <p>Affichage : Ceci est un texte avec une note[^1].</p> <p>[^1]: Ceci est la note de bas de page.</p>"},{"location":"markdown/#37-separateurs","title":"3.7 S\u00e9parateurs","text":"<p>On peut ajouter des s\u00e9parateurs horizontaux pour structurer un document :</p> <pre><code>---\n</code></pre>"},{"location":"markdown/#4-conclusion","title":"4. Conclusion","text":"<p>Markdown est un langage simple et puissant permettant de structurer du texte de mani\u00e8re efficace. Il est largement utilis\u00e9 dans le monde du d\u00e9veloppement et de la documentation. En ma\u00eetrisant sa syntaxe de base et avanc\u00e9e, vous pourrez rapidement r\u00e9diger du contenu clair et bien format\u00e9 sans effort.</p>"}]}